image:
  repository: velero/velero
  tag: latest

## Default s3 bucket for storing all backup files created by the backup-restore-operator
backupsEnabled: true
configuration:
  provider: AWS
  backupStorageLocation:
    provider: AWS
    bucketName: dc15-cmf-prd
    prefix: dc15-cmf-prd-bkups
    region: ap-south
    endpoint: http://dc15-flashblade01.neustar.net
    endpointCA: ""
    insecureTLSSkipVerify: false

s3:
  enabled: true
  ## credentialSecretName if set, should be the name of the Secret containing AWS credentials.
  ## To use IAM Role, don't set this field
  credentialSecretName: "bkp-credentials"
  credentialSecretNamespace: "velero"
  provider: AWS
  region: "ap-south"
  bucketName: "dc15-cmf-prd"
  prefix: "dc15-cmf-prd-bkups "
  endpoint: "http://dc15-flashblade01.neustar.net "
  endpointCA: ""
  insecureTLSSkipVerify: false

## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## If persistence is enabled, operator will create a PVC with mountPath /var/lib/backups
persistence: 
  enabled: false

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack). 
  ## Refer https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  ##
  storageClass: "-"

  ## If you want to disable dynamic provisioning by setting storageClass to "-" above, 
  ## and want to target a particular PV, provide name of the target volume 
  volumeName: ""

  ## Only certain StorageClasses allow resizing PVs; Refer https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/
  size: 2Gi
  kubectl:
    image:
      repository: docker.io/bitnami/kubectl
    tag: latest

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  annotations: {}

priorityClassName: ""
